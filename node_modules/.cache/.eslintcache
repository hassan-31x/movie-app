[{"C:\\Users\\Hp\\Codes\\React Apps\\movieApp-react\\src\\index.js":"1","C:\\Users\\Hp\\Codes\\React Apps\\movieApp-react\\src\\App.js":"2","C:\\Users\\Hp\\Codes\\React Apps\\movieApp-react\\src\\components\\Sidebar.js":"3","C:\\Users\\Hp\\Codes\\React Apps\\movieApp-react\\src\\components\\Movie.js":"4"},{"size":231,"mtime":1672207095295,"results":"5","hashOfConfig":"6"},{"size":2002,"mtime":1672222225275,"results":"7","hashOfConfig":"6"},{"size":3568,"mtime":1672221951344,"results":"8","hashOfConfig":"6"},{"size":440,"mtime":1672206554007,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"awu1kk",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"13"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"C:\\Users\\Hp\\Codes\\React Apps\\movieApp-react\\src\\index.js",[],[],[],"C:\\Users\\Hp\\Codes\\React Apps\\movieApp-react\\src\\App.js",["24","25"],[],"C:\\Users\\Hp\\Codes\\React Apps\\movieApp-react\\src\\components\\Sidebar.js",["26"],[],"import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport 'boxicons'\r\n\r\nconst Sidebar = (props) => {\r\n  const useMediaQuery = (query) => {\r\n    const [matches, setMatches] = useState(false);\r\n\r\n    useEffect(() => {\r\n      const media = window.matchMedia(query);\r\n      if (media.matches !== matches) {\r\n        setMatches(media.matches);\r\n      }\r\n      const listener = () => setMatches(media.matches);\r\n      window.addEventListener(\"resize\", listener);\r\n      return () => window.removeEventListener(\"resize\", listener);\r\n    }, [matches, query]);\r\n\r\n    return matches;\r\n  };\r\n  let menuItems = [\r\n    {\r\n      name: \"Categories\",\r\n      iconName: \"menu\",\r\n    },\r\n    {\r\n      name: \"All\",\r\n      iconName: \"category\",\r\n      type: \"solid\",\r\n    },\r\n    {\r\n      name: \"Movie\",\r\n      iconName: \"camera-movie\",\r\n      type: \"solid\",\r\n    },\r\n    {\r\n      name: \"Series\",\r\n      iconName: \"movie-play\",\r\n      type: \"solid\",\r\n    },\r\n    {\r\n      name: \"Episode\",\r\n      iconName: \"movie\",\r\n      type: \"solid\",\r\n    },\r\n    {\r\n      name: \"Starred\",\r\n      iconName: \"star\",\r\n      type: \"solid\",\r\n    },\r\n    {\r\n      name: \"Settings\",\r\n      iconName: \"cog\",\r\n      type: \"solid\",\r\n    },\r\n    {\r\n      name: \"Log Out\",\r\n      iconName: \"log-out\",\r\n      color: \"red\",\r\n      rotate: \"180\",\r\n    },\r\n  ];\r\n\r\n  const [hovered, setHovered] = useState(null);\r\n  const [active, setActive] = useState(1);\r\n  const [animate, setAnimate] = useState(false);\r\n  const [expanded, setExpanded] = useState(false);\r\n  // const changeSmall = useMediaQuery(\"(max-height: 550px)\");\r\n  let delay = 1;\r\n  useEffect(() => {\r\n    setAnimate(true);\r\n    let timer = setTimeout(() => setAnimate(false), delay * 1000);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [active, delay]);\r\n\r\n  return (\r\n    <div className={`sidebar ${expanded && \"expanded\"}`}>\r\n      {menuItems.map((item, index) => {\r\n        let middle = false;\r\n        if (!(index === 0 || index === menuItems.length - 1)) {\r\n          middle = true;\r\n        }\r\n        return (\r\n          <div\r\n            className={`boxicon-container ${\r\n              expanded && \"expanded-boxicon-container\"\r\n            }`}\r\n            onMouseEnter={() => {\r\n              if (middle) setHovered(index);\r\n            }}\r\n            onMouseLeave={() => {\r\n              if (middle) setHovered(null);\r\n            }}\r\n            onClick={() => {\r\n              if (middle) {\r\n                setActive(index)\r\n                props.onClickMenuItem(item.name)\r\n              };\r\n              if (index === 0) setExpanded(!expanded);\r\n            }}\r\n            key={index}\r\n          >\r\n            <box-icon\r\n              class={`${middle && \"boxicon\"} \r\n                      ${!middle && \"first-and-last-trash-fix\"}\r\n                      ${active === index && \"active\"}\r\n                      `}\r\n              size={'sm'}\r\n              name={item.iconName}\r\n              type={item.type}\r\n              color={\r\n                hovered === index || active === index ? \"white\" : item.color\r\n              }\r\n              animation={active === index && animate ? \"tada\" : \"\"}\r\n              rotate={item.rotate}\r\n            ></box-icon>\r\n            <p\r\n              className={`description \r\n            ${expanded && \"show-description\"}\r\n            ${active === index && \"active-description\"}`}\r\n            >\r\n              {item.name}\r\n            </p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Hp\\Codes\\React Apps\\movieApp-react\\src\\components\\Movie.js",[],[],{"ruleId":"27","severity":1,"message":"28","line":34,"column":5,"nodeType":"29","endLine":34,"endColumn":7,"suggestions":"30"},{"ruleId":"27","severity":1,"message":"31","line":39,"column":5,"nodeType":"29","endLine":39,"endColumn":23,"suggestions":"32"},{"ruleId":"33","severity":1,"message":"34","line":7,"column":9,"nodeType":"35","messageId":"36","endLine":7,"endColumn":22},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchMovies'. Either include it or remove the dependency array.","ArrayExpression",["37"],"React Hook useEffect has missing dependencies: 'searchMovies' and 'searchTerm'. Either include them or remove the dependency array.",["38"],"no-unused-vars","'useMediaQuery' is assigned a value but never used.","Identifier","unusedVar",{"desc":"39","fix":"40"},{"desc":"41","fix":"42"},"Update the dependencies array to be: [searchMovies]",{"range":"43","text":"44"},"Update the dependencies array to be: [searchMovies, searchTerm, selectedMenuItem]",{"range":"45","text":"46"},[938,940],"[searchMovies]",[1081,1099],"[searchMovies, searchTerm, selectedMenuItem]"]